
&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыборФайлаПродолжить", ЭтотОбъект,"ПутьКФайлу");
	
	
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбора.Заголовок = "Выберите файл";
	ДиалогВыбора.Фильтр = "Файл с таблицей данных (.dat)| *.dat";
	ДиалогВыбора.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайлаПродолжить (Результат,ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
		ЭтотОбъект[ДополнительныеПараметры] = Результат[0];
		ЗагрузитьФайл(ЭтотОбъект[ДополнительныеПараметры]);
	КонецЕсли;
	
КонецПроцедуры                                             

&НаСервере
Процедура ЗагрузитьФайл(ПутьФайла)
	
	ТаблицаИзФайла = ЗначениеИзФайла(ПутьФайла);
	Если ТЗ.Количество() = 0 Тогда
		ВывестиТаблицуЗначенияВТаблицуНаФорме(ТаблицаИзФайла,"ТЗ");
		Сообщить("Если хотите вывести второй файл, выберите файл повторно");
	ИначеЕсли ТЗ1.Количество() = 0 Тогда
		ВывестиТаблицуЗначенияВТаблицуНаФорме(ТаблицаИзФайла,"ТЗ1");
	Иначе
		Сообщить("Перед загрузкой очистите таблицы");
		Возврат
	КонецЕсли;
			
	КонецПроцедуры 

&НаСервере
Процедура ВывестиТаблицуЗначенияВТаблицуНаФорме(ТаблицаЗначений, ТабРеквизит, ТабЭлементФормы = Неопределено)
	
	Если ТабЭлементФормы = Неопределено Тогда
		ТабЭлементФормы = ТабРеквизит;
	КонецЕсли; 	
	// Собирается инофрмация по добавленным ранее элементам формы и реквизитам, на которые элементы формы ссылаются.
	УдаляемыеРеквизиты = Новый Массив;
	УдаляемыеЭлементы = Новый Массив;
	Для каждого Эл Из Элементы[ТабЭлементФормы].ПодчиненныеЭлементы Цикл
		УдаляемыеРеквизиты.Добавить(Эл.ПутьКДанным);
		УдаляемыеЭлементы.Добавить(Эл);
	КонецЦикла; 
	Для каждого Эл Из УдаляемыеЭлементы Цикл
		Элементы.Удалить(Эл);
	КонецЦикла; 	
	// Добавляются колонки из ТаблицыЗначений в реквизит таблицы ТабРеквизит
	НовыеРеквизиты = Новый Массив;
	Для Каждого Колонка Из ТаблицаЗначений.Колонки Цикл
		НовыйРеквизит = Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, ТабРеквизит, Колонка.Заголовок);
		НовыеРеквизиты.Добавить(НовыйРеквизит);
	КонецЦикла;
	//Удаляются старые и устанавливаются новые реквизиты
	ИзменитьРеквизиты(НовыеРеквизиты, УдаляемыеРеквизиты);	
	// Добавляются колонки из ТаблицыЗначений в элементы ТабЭлементФормы со ссылкой на колонки в ТабРеквизит
	Для Каждого Колонка Из ТаблицаЗначений.Колонки Цикл
		НовыйЭлемент = Элементы.Добавить( ТабРеквизит + "_" + Колонка.Имя, Тип("ПолеФормы"), Элементы[ТабЭлементФормы]);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеНадписи; //Или ПолеВвода, или что-то другое;
		НовыйЭлемент.ПутьКДанным = ТабРеквизит + "." + Колонка.Имя;
	КонецЦикла;  
	// В созданный реквизит загружается ТЗ
	ЭтаФорма[ТабРеквизит].Загрузить(ТаблицаЗначений);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНаСервере()
	
	ЗначениеТаблицыДанных = РеквизитФормыВЗначение("ТЗ");
	Для каждого Строка Из ЗначениеТаблицыДанных Цикл
		СсылкаФилиал = XMLЗначение(Тип("СправочникСсылка.Филиалы"), Строка.Ссылка);
		Если ЗначениеЗаполнено(СсылкаФилиал.Код) Тогда
			ОбъектФилиал = СсылкаФилиал.ПолучитьОбъект();
		Иначе
			ОбъектФилиал = Справочники.Филиалы.СоздатьЭлемент();
			ОбъектФилиал.УстановитьСсылкуНового(СсылкаФилиал);
		КонецЕсли;
		
		ОбъектФилиал.Город = XMLЗначение(Тип("СправочникСсылка.Города"), Строка.Город);
		
		ОбъектФилиал.ВидФилиала = Перечисления.ВидыФилиалов[Строка.ВидФилиала];
		ЗаполнитьЗначенияСвойств(ОбъектФилиал,Строка,,"ВидФилиала, Город");
		ОбъектФилиал.Записать();
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	ЗагрузитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьГородаНаСервере()
	
	ЗначениеТаблицыДанных = РеквизитФормыВЗначение("ТЗ");
	Для каждого Строка Из ЗначениеТаблицыДанных Цикл
		ССылкаГорода = XMLЗначение(Тип("СправочникСсылка.Города"), Строка.Ссылка);
		Если ЗначениеЗаполнено(ССылкаГорода.Код) Тогда
			ОбъектГорода = ССылкаГорода.ПолучитьОбъект();
		Иначе
			ОбъектГорода = Справочники.Города.СоздатьЭлемент();
			ОбъектГорода.УстановитьСсылкуНового(ССылкаГорода);
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ОбъектГорода,Строка);
		ОбъектГорода.Записать();
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьГорода(Команда)
	ЗагрузитьГородаНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗагрузкаНоменклатурыНаСервере()
	
	ЗначениеТаблицыДанных = РеквизитФормыВЗначение("ТЗ");
	
	Для каждого Строка Из ЗначениеТаблицыДанных Цикл
		
		ССылкаНоменклатура1 = XMLЗначение(Тип("СправочникСсылка.Номенклатура"), Строка.Ссылка);
		Если Строка.ЭтоГруппа = Ложь Тогда
			Если ЗначениеЗаполнено(ССылкаНоменклатура1.Код) Тогда
				ОбъектНоменклатура = ССылкаНоменклатура1.ПолучитьОбъект();
			Иначе
				ОбъектНоменклатура = Справочники.Номенклатура.СоздатьЭлемент();
				ОбъектНоменклатура.УстановитьСсылкуНового(ССылкаНоменклатура1);
			КонецЕсли;
		Иначе
			Если ЗначениеЗаполнено(ССылкаНоменклатура1.Код) Тогда
				ОбъектНоменклатура = ССылкаНоменклатура1.ПолучитьОбъект();
			Иначе
				ОбъектНоменклатура = Справочники.Номенклатура.СоздатьГруппу();
				ОбъектНоменклатура.УстановитьСсылкуНового(ССылкаНоменклатура1);
			КонецЕсли;
		КонецЕсли;
		
		ОбъектНоменклатура.Родитель = XMLЗначение (Тип("СправочникСсылка.Номенклатура"),Строка.Родитель);
		ЗаполнитьЗначенияСвойств(ОбъектНоменклатура,Строка,,"Родитель, ЭтоГруппа");
		ОбъектНоменклатура.Записать();
		КонецЦикла;
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ЗагрузкаНоменклатуры(Команда)
		ЗагрузкаНоменклатурыНаСервере();
	КонецПроцедуры

&НаСервере
	Процедура ЗагрузитьСтавкуНДСНаСервере()
		
	ЗначениеТаблицыДанных = РеквизитФормыВЗначение("ТЗ");
	НЗ = РегистрыСведений.ОтклонениеСтавкиНДС.СоздатьНаборЗаписей();

	Для каждого Строка Из ЗначениеТаблицыДанных Цикл
		
		ССылкаНоменклатура = XMLЗначение(Тип("СправочникСсылка.Номенклатура"), Строка.Номенклатура);
		НЗ.Отбор.Номенклатура.Установить(ССылкаНоменклатура);
		НЗ.Записать();
		
		НоваяЗапись = НЗ.Добавить();
		НоваяЗапись.Номенклатура = ССылкаНоменклатура;
		НоваяЗапись.СтавкаНДС = Строка.СтавкаНДС;
		НЗ.Записать();
	КонецЦикла;
	
	КонецПроцедуры

&НаКлиенте
	Процедура ЗагрузитьСтавкуНДС(Команда)
		ЗагрузитьСтавкуНДСНаСервере();
	КонецПроцедуры


&НаСервере
	Процедура ЗагрузкаНоменклатурыСТаблицойНаСервере()
		
		ЗначениеТаблицыДанных = РеквизитФормыВЗначение("ТЗ");
		ЗначениеТаблицыДанныхСписка = РеквизитФормыВЗначение("ТЗ1");
	
		Для каждого Строка Из ЗначениеТаблицыДанных Цикл
			
			ССылкаНоменклатура1 = XMLЗначение(Тип("СправочникСсылка.Номенклатура"), Строка.Ссылка);
			Если Строка.ЭтоГруппа = Ложь Тогда
				Для каждого СтрокаСписка Из ЗначениеТаблицыДанныхСписка Цикл
					Если Строка.Ссылка = СтрокаСписка.СсылкаНоменклатура ИЛИ Строка.Ссылка = СтрокаСписка.СсылкаТовар  Тогда
						
						Если ЗначениеЗаполнено(ССылкаНоменклатура1.Код) Тогда
							ОбъектНоменклатура = ССылкаНоменклатура1.ПолучитьОбъект();
						Иначе
							ОбъектНоменклатура = Справочники.Номенклатура.СоздатьЭлемент();
							ОбъектНоменклатура.УстановитьСсылкуНового(ССылкаНоменклатура1);
						КонецЕсли;
						
						ОбъектСписка = ОбъектНоменклатура.Состав.Добавить();
						ОбъектСписка.Товар = XMLЗначение (Тип("СправочникСсылка.Номенклатура"),СтрокаСписка.СсылкаТовар);
						ОбъектСписка.Количество = СтрокаСписка.Количество;
						ОбъектСписка.КоплектующиеДляРазбора = СтрокаСписка.КомплектующееДляРазбора;
						
						ОбъектНоменклатура.Родитель = XMLЗначение (Тип("СправочникСсылка.Номенклатура"),Строка.Родитель);
						ЗаполнитьЗначенияСвойств(ОбъектНоменклатура,Строка,,"Родитель, ЭтоГруппа");
						ОбъектНоменклатура.Записать();
					КонецЕсли;
				КонецЦикла;
			Иначе
				Если ЗначениеЗаполнено(ССылкаНоменклатура1.Код) Тогда
					ОбъектНоменклатура = ССылкаНоменклатура1.ПолучитьОбъект();
				Иначе
					ОбъектНоменклатура = Справочники.Номенклатура.СоздатьГруппу();
					ОбъектНоменклатура.УстановитьСсылкуНового(ССылкаНоменклатура1);
				КонецЕсли;
				ОбъектНоменклатура.Родитель = XMLЗначение (Тип("СправочникСсылка.Номенклатура"),Строка.Родитель);
				ЗаполнитьЗначенияСвойств(ОбъектНоменклатура,Строка,,"Родитель, ЭтоГруппа, Гарантия, ВидТовара");
				ОбъектНоменклатура.Записать();
			КонецЕсли;
		КонецЦикла;

	КонецПроцедуры


&НаКлиенте
	Процедура ЗагрузкаНоменклатурыСТаблицой(Команда)
		ЗагрузкаНоменклатурыСТаблицойНаСервере();
	КонецПроцедуры


&НаКлиенте
	Процедура Очистка(Команда)
		
		Тз.Очистить();
		Тз1.Очистить();
		
	КонецПроцедуры


&НаСервере
	Процедура ЗагрузкаСправочникаЮрЛицаНаСервере()
		
	ЗначениеТаблицыДанных = РеквизитФормыВЗначение("ТЗ");
	Для каждого Строка Из ЗначениеТаблицыДанных Цикл
		ССылкаЮ = XMLЗначение(Тип("СправочникСсылка.ЮридическиеЛица"), Строка.Ссылка);
		Если ЗначениеЗаполнено(ССылкаЮ.Код) Тогда
			ОбъектЮ = ССылкаЮ.ПолучитьОбъект();
		Иначе
			ОбъектЮ = Справочники.ЮридическиеЛица.СоздатьЭлемент();
			ОбъектЮ.УстановитьСсылкуНового(ССылкаЮ);
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ОбъектЮ,Строка);
		ОбъектЮ.Записать();
	КонецЦикла;

	КонецПроцедуры


&НаКлиенте
	Процедура ЗагрузкаСправочникаЮрЛица(Команда)
		ЗагрузкаСправочникаЮрЛицаНаСервере();
	КонецПроцедуры


&НаСервере
	Процедура ЗагрузкаРегистраИсторияЮрЛицаНаСервере()
		
		ЗначениеТаблицыДанных = РеквизитФормыВЗначение("ТЗ");
		НЗ = РегистрыСведений.ИсторияЮрЛиц.СоздатьНаборЗаписей();
	   

		Для каждого Строка Из ЗначениеТаблицыДанных Цикл
		НЗ = РегистрыСведений.ИсторияЮрЛиц.СоздатьНаборЗаписей();
		СсылкаЮрЛицо = XMLЗначение(Тип("СправочникСсылка.ЮридическиеЛица"), Строка.ЮрЛицо);	
		НЗ.Отбор.ЮрЛицо.Установить(СсылкаЮрЛицо);
		//НЗ.Отбор.ВидДанных.Установить(Перечисления.ВидыДанныхЮрЛица[Строка.ВидДанных]);
		НЗ.Отбор.Период.Установить(Строка.Период);
		
		НоваяЗапись = НЗ.Добавить();
		НоваяЗапись.ЮрЛицо = СсылкаЮрЛицо;
		НоваяЗапись.ВидДанных = Перечисления.ВидыДанныхЮрЛица[Строка.ВидДанных];
		ЗаполнитьЗначенияСвойств(НоваяЗапись,Строка,,"ЮрЛицо, ВидДанных");
		НЗ.Записать();
	КонецЦикла;
    
	
	КонецПроцедуры


&НаКлиенте
	Процедура ЗагрузкаРегистраИсторияЮрЛица(Команда)
		ЗагрузкаРегистраИсторияЮрЛицаНаСервере();
	КонецПроцедуры
 