
&НаКлиенте
Процедура СоздатьДокументы(Команда)
	СоздатьДокументыНаСервере();
КонецПроцедуры

&НаСервере
Процедура СоздатьДокументыНаСервере()
	
	СсылкаНоменклатура 	= Справочники.Номенклатура.НайтиПоКоду("000001003");
	СсылкаСотрудник 	= Справочники.Сотрудники.НайтиПоКоду("000000001");
	СсылкаКонтрагент 	= Справочники.Контрагенты.НайтиПоКоду("000000002");
	
	ВыборкаФилиалов = Справочники.Филиалы.Выбрать();
	
	Пока ВыборкаФилиалов.Следующий() Цикл 
		СсылкаСклад = Справочники.Склады.НайтиПоРеквизиту("ТипСклада", Перечисления.ТипыСкладов.Основной, , ВыборкаФилиалов.Ссылка);
		
		ОбъектДокумент = Документы.ПриходнаяНакладная.СоздатьДокумент();
		ОбъектДокумент.Дата = ТекущаяДата();
		ОбъектДокумент.УстановитьНовыйНомер();
		ОбъектДокумент.Филиал = ВыборкаФилиалов.Ссылка;
		ОбъектДокумент.Склад = СсылкаСклад;
		ОбъектДокумент.Автор = СсылкаСотрудник;
		ОбъектДокумент.Контрагент = СсылкаКонтрагент;
		
		СтрокаТабЧасти = ОбъектДокумент.Номенклатура.Добавить();
		СтрокаТабЧасти.Номенклатура = СсылкаНоменклатура;
		СтрокаТабЧасти.Количество = 100;
		СтрокаТабЧасти.Цена = 21000;
		СтрокаТабЧасти.Сумма = СтрокаТабЧасти.Количество * СтрокаТабЧасти.Цена;
		
		ОбъектДокумент.СуммаДокумента = ОбъектДокумент.Номенклатура.Итог("Сумма");
		ОбъектДокумент.Записать();	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументИОткрыть(Команда)
	
	СсылкаДокумент = СоздатьДокументИОткрытьНаСервере();
	ОткрытьФорму("Документ.ПриходнаяНакладная.ФормаОбъекта", Новый Структура("Ключ", СсылкаДокумент));
    //Передавая структуру с ключом “Ключ” и значением “СсылкаДокумент”, мы открываем существующий документ

КонецПроцедуры

&НаСервере
Функция СоздатьДокументИОткрытьНаСервере()
	
	СсылкаНоменклатура = Справочники.Номенклатура.НайтиПоКоду("000001003");
	СсылкаСотрудник = Справочники.Сотрудники.НайтиПоКоду("000000001");
	СсылкаКонтрагент = Справочники.Контрагенты.НайтиПоКоду("000000002");
	СсылкаФилиал = Справочники.Филиалы.НайтиПоКоду("000000001");
	
	СсылкаСклад = Справочники.Склады.НайтиПоРеквизиту("ТипСклада",
               Перечисления.ТипыСкладов.Основной, , СсылкаФилиал);
	
	ОбъектДокумент = Документы.ПриходнаяНакладная.СоздатьДокумент();
	ОбъектДокумент.Дата = ТекущаяДата();
	ОбъектДокумент.УстановитьНовыйНомер();
	ОбъектДокумент.Филиал = СсылкаФилиал;
	ОбъектДокумент.Склад = СсылкаСклад;
	ОбъектДокумент.Автор = СсылкаСотрудник;
	ОбъектДокумент.Контрагент = СсылкаКонтрагент;
	
	СтрокаТабЧасти = ОбъектДокумент.Номенклатура.Добавить();
	СтрокаТабЧасти.Номенклатура = СсылкаНоменклатура;
	СтрокаТабЧасти.Количество = 100;
	СтрокаТабЧасти.Цена = 21000;
	СтрокаТабЧасти.Сумма = СтрокаТабЧасти.Количество * СтрокаТабЧасти.Цена;
	
	ОбъектДокумент.СуммаДокумента =
              ОбъектДокумент.Номенклатура.Итог("Сумма");
	ОбъектДокумент.Записать();
	
	Возврат ОбъектДокумент.Ссылка;

КонецФункции

&НаКлиенте
Процедура ИсправитьСумму(Команда)
	ИсправитьСуммуНаСервере();
КонецПроцедуры

&НаСервере
Процедура ИсправитьСуммуНаСервере()
	
	СуммаЧисло = СсылкаПриходнаяНакладная.Номенклатура.Итог("Сумма");
	Если (СсылкаПриходнаяНакладная.СуммаДокумента <> СуммаЧисло) Тогда
		ОбъектДокумента = СсылкаПриходнаяНакладная.ПолучитьОбъект();
		ОбъектДокумента.СуммаДокумента = СуммаЧисло;
		ОбъектДокумента.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
		Сообщить(СтрШаблон("Документ №%1 успешно исправлен", СсылкаПриходнаяНакладная.Номер));
	Иначе
		Сообщить(СтрШаблон("В документ №%1 данные не требуют исправления", СсылкаПриходнаяНакладная.Номер));
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДокументовСсылкаПриИзменении(Элемент)
	
	ТекДанные = Элементы.ТаблицаДокументов.ТекущиеДанные;
	Если (ТекДанные <> Неопределено) Тогда
		ЗаполнитьЗначенияСвойств(ТекДанные, ПолучитьРеквизитыДокумента(ТекДанные.Ссылка, "Проведен, ПометкаУдаления"));
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРеквизитыДокумента(Знач СсылкаДокумента, Знач СтрокаРеквизиты)
	
	СтруктураВозврата = Новый Структура(СтрокаРеквизиты);
	ЗаполнитьЗначенияСвойств(СтруктураВозврата, СсылкаДокумента);
	Возврат СтруктураВозврата;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьДанные(Команда)
	ОбновитьДанныеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеНаСервере()
	
	Для Каждого СтрокаТаблицы Из ТаблицаДокументов Цикл 
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ПолучитьРеквизитыДокумента(СтрокаТаблицы.Ссылка, "Проведен, ПометкаУдаления")); 
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПровестиДанные(Команда)
	ПровестиДанныеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПровестиДанныеНаСервере()
	
	Для Каждого СтрокаТаблицы Из ТаблицаДокументов Цикл 
		СсылкаДок = СтрокаТаблицы.Ссылка;
		Если (СсылкаДок.Проведен) Тогда
			Сообщить(СтрШаблон("Документ №%1 не требует проведения", СсылкаДок.Номер));
			Продолжить;
		Иначе 
			ОбъектДокумента = СсылкаДок.ПолучитьОбъект();
			Если (ОбъектДокумента.ПометкаУдаления) Тогда
				ОбъектДокумента.УстановитьПометкуУдаления(Ложь);
			КонецЕсли;
			ОбъектДокумента.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
			Сообщить(СтрШаблон("Документ №%1 проведен", СсылкаДок.Номер));
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ПолучитьРеквизитыДокумента(СтрокаТаблицы.Ссылка, "Проведен, ПометкаУдаления")); 
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПометитьНаУдалениеДанные(Команда)
	ПометитьНаУдалениеДанныеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПометитьНаУдалениеДанныеНаСервере()
	
	Для Каждого СтрокаТаблицы Из ТаблицаДокументов Цикл 
		СсылкаДок = СтрокаТаблицы.Ссылка;
		Если (СсылкаДок.ПометкаУдаления) Тогда
			Сообщить(СтрШаблон("Документ №%1 не требует удаления", СсылкаДок.Номер));
			Продолжить;
		Иначе 
			ОбъектДокумента = СсылкаДок.ПолучитьОбъект();
			Если (ОбъектДокумента.Проведен) Тогда
				ОбъектДокумента.УстановитьПометкуУдаления(Истина);
				ОбъектДокумента.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			Иначе
				ОбъектДокумента.УстановитьПометкуУдаления(Истина);
				ОбъектДокумента.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
			Сообщить(СтрШаблон("Документ №%1 удален", СсылкаДок.Номер));
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ПолучитьРеквизитыДокумента(СтрокаТаблицы.Ссылка, "Проведен, ПометкаУдаления")); 
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры
