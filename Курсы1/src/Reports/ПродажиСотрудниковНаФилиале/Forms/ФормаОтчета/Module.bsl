
&НаСервере
Процедура СформироватьНаСервере()
	
	ТекущаяДата = НачалоМесяца(Период.ДатаОкончания); 
		
	НЗ = РегистрыСведений.ПроизводственныйКалендарь.СоздатьНаборЗаписей();
	НЗ.Записать();
	
	Пока ТекущаяДата <= Период.ДатаОкончания Цикл
		НЗ = РегистрыСведений.ПроизводственныйКалендарь.СоздатьНаборЗаписей();
		НЗ.Отбор.ДатаКалендаря.Установить(ТекущаяДата);
		НЗ.Отбор.Год.Установить(Год(Период.ДатаОкончания)); 
		
		НоваяЗапись = НЗ.Добавить();
		НоваяЗапись.ДатаКалендаря = ТекущаяДата;
		НоваяЗапись.Год = Год(Период.ДатаОкончания);
		НоваяЗапись.ДеньНедели = ДеньНедели(ТекущаяДата);
		НЗ.Записать(); 
		ТекущаяДата = ТекущаяДата + 60*60*24;
	КонецЦикла;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Сотрудники.ФилиалРаботы КАК Филиал,
	                      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Сотрудники.Ссылка) КАК КоличествоСотрудников
	                      |ПОМЕСТИТЬ ВТ_Количество
	                      |ИЗ
	                      |	Справочник.Сотрудники КАК Сотрудники
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	Сотрудники.ФилиалРаботы
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ПродажаТовараОбороты.Регистратор.Автор КАК Сотрудник,
	                      |	СУММА(ПродажаТовараОбороты.СуммаПродажиОборот) КАК СуммаПродажи,
	                      |	СУММА(ПродажаТовараОбороты.КоличествоОборот) КАК Количество
	                      |ПОМЕСТИТЬ ВТ_Продажи
	                      |ИЗ
	                      |	РегистрНакопления.ПродажаТовара.Обороты(&дата1, &дата2, Регистратор, Филиал = &Филиал) КАК ПродажаТовараОбороты
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ПродажаТовараОбороты.Регистратор.Автор
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Филиалы.Наименование КАК Филиал,
	                      |	Филиалы.Город.Представление КАК Город,
	                      |	ВТ_Количество.КоличествоСотрудников КАК КоличествоСотрудников,
	                      |	ЕСТЬNULL(СреднийОборотЗа3Мес.СуммаПродажиОборот, 0) КАК СуммаПродажи,
	                      |	ЕСТЬNULL(ИсторияФилиалаСрезПоследних.Данные, 0) КАК НормативПродаж,
	                      |	ЕСТЬNULL(ПродажиТекущие.СуммаПродажи, 0) КАК СуммаПродажиТекущий
	                      |ИЗ
	                      |	Справочник.Филиалы КАК Филиалы
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Количество КАК ВТ_Количество
	                      |		ПО (ВТ_Количество.Филиал = Филиалы.Ссылка)
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                      |			СРЕДНЕЕ(ПродажаТовараОбороты.СуммаПродажиОборот) КАК СуммаПродажиОборот,
	                      |			ПродажаТовараОбороты.Филиал КАК Филиал
	                      |		ИЗ
	                      |			РегистрНакопления.ПродажаТовара.Обороты(&дата0, &дата1, Месяц, Филиал = &Филиал) КАК ПродажаТовараОбороты
	                      |		
	                      |		СГРУППИРОВАТЬ ПО
	                      |			ПродажаТовараОбороты.Филиал) КАК СреднийОборотЗа3Мес
	                      |		ПО (СреднийОборотЗа3Мес.Филиал.Ссылка = Филиалы.Ссылка)
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияФилиала.СрезПоследних(&дата2, ВидДанных = &Норматив) КАК ИсторияФилиалаСрезПоследних
	                      |		ПО (ИсторияФилиалаСрезПоследних.Филиал = Филиалы.Ссылка)
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                      |			СУММА(ВТ_Продажи.СуммаПродажи) КАК СуммаПродажи
	                      |		ИЗ
	                      |			ВТ_Продажи КАК ВТ_Продажи) КАК ПродажиТекущие
	                      |		ПО (ИСТИНА)
	                      |ГДЕ
	                      |	Филиалы.Ссылка = &Филиал
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ПРЕДСТАВЛЕНИЕ(ВТ_Продажи.Сотрудник) КАК Сотрудник,
	                      |	ВЫБОР
	                      |		КОГДА ВТ_Продажи.Сотрудник = &Сайт
	                      |			ТОГДА ИСТИНА
	                      |		ИНАЧЕ ЛОЖЬ
	                      |	КОНЕЦ КАК ЭтоСайт,
	                      |	ПродажаТовараОбороты.Период КАК ДатаПродажи,
	                      |	ПродажаТовараОбороты.Регистратор КАК ДокументПродажи,
	                      |	ПродажаТовараОбороты.Номенклатура КАК ТоварПродажи,
	                      |	ПродажаТовараОбороты.КоличествоОборот КАК Количество,
	                      |	ПродажаТовараОбороты.СуммаПродажиОборот КАК Продажи
	                      |ИЗ
	                      |	ВТ_Продажи КАК ВТ_Продажи
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПродажаТовара.Обороты(&дата1, &дата2, Регистратор, Филиал = &Филиал) КАК ПродажаТовараОбороты
	                      |		ПО ВТ_Продажи.Сотрудник = ПродажаТовараОбороты.Регистратор.Автор
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ДатаПродажи,
	                      |	Продажи УБЫВ
	                      |ИТОГИ
	                      |	МИНИМУМ(ЭтоСайт),
	                      |	СУММА(Количество),
	                      |	СУММА(Продажи)
	                      |ПО
	                      |	ОБЩИЕ,
	                      |	Сотрудник
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ПроизводственныйКалендарь.ДатаКалендаря КАК ДатаОстатков,
	                      |	ЕСТЬNULL(СУММА(ОстаткиТовараОстаткиИОбороты.СуммаКонечныйОстаток), НЕОПРЕДЕЛЕНО) КАК СуммаОстатков,
	                      |	ЕСТЬNULL(СУММА(ОстаткиТовараОстаткиИОбороты.КоличествоКонечныйОстаток), НЕОПРЕДЕЛЕНО) КАК КоличествоОстатков
	                      |ИЗ
	                      |	РегистрСведений.ПроизводственныйКалендарь КАК ПроизводственныйКалендарь
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиТовара.ОстаткиИОбороты(&Дата3, &дата2, День, , Филиал = &Филиал) КАК ОстаткиТовараОстаткиИОбороты
	                      |		ПО ПроизводственныйКалендарь.ДатаКалендаря = ОстаткиТовараОстаткиИОбороты.Период
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ПроизводственныйКалендарь.ДатаКалендаря
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ДатаОстатков");
	
	Запрос.УстановитьПараметр("Филиал", Филиал);
	Запрос.УстановитьПараметр("Дата1", Период.ДатаНачала);
	Запрос.УстановитьПараметр("Дата2", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("Дата0", ДобавитьМесяц(Период.ДатаНачала,-3));
	Запрос.УстановитьПараметр("Дата3", НачалоМесяца(Период.ДатаОкончания));
	Запрос.УстановитьПараметр("Сайт", Справочники.Сотрудники.НайтиПоНаименованию("СайтДНС"));
	Запрос.УстановитьПараметр("Норматив", Перечисления.ВидыДанныхФилиала.Норматив);
		
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Результат.Очистить();
	МакетПродажиСотрудников = РеквизитФормыВЗначение("Отчет").ПолучитьМакет("ПродажиНаФилиале");
	ОбластьИнформация = макетПродажиСотрудников.ПолучитьОбласть("ОбщиеСведения");
	ОбластьШапка = макетПродажиСотрудников.ПолучитьОбласть("Шапка");
	ОбластьСтрока = макетПродажиСотрудников.ПолучитьОбласть("Строка");
	ОбластьСтрокаСайт = макетПродажиСотрудников.ПолучитьОбласть("СтрокаСайт");
	ОбластьИтог = макетПродажиСотрудников.ПолучитьОбласть("Подвал");
	ОбластьШапкаОстатки = макетПродажиСотрудников.ПолучитьОбласть("ШапкаОстатки");
	ОбластьСтрокаОстатки = макетПродажиСотрудников.ПолучитьОбласть("СтрокаОстатки");
	ОбластьПустая = макетПродажиСотрудников.ПолучитьОбласть("Пустая");
	
	ВыборкаИнформация = РезультатЗапроса[2].Выбрать();
	Если выборкаИнформация.Следующий() Тогда
		ОбластьИнформация.Параметры.Заполнить(ВыборкаИнформация);
		ОбластьИнформация.Параметры.ПроцентУспеха = Формат(?(ВыборкаИнформация.НормативПродаж = 0, 0, ВыборкаИнформация.СуммаПродажиТекущий/ВыборкаИнформация.НормативПродаж), "ЧЦ=10; ЧДЦ=2; ЧН=");
	КонецЕсли;
	
	Результат.Вывести(ОбластьИнформация);
	Результат.Вывести(ОбластьШапка);
	
	ВыборкаИтог = РезультатЗапроса[3].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОБЩИЕ");
	
	 
	Если ВыборкаИтог.Следующий() Тогда
		Итог = ВыборкаИтог.Продажи; 
		НомерСтроки = 1;
		
	Выборка = ВыборкаИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Сотрудник");
	Пока Выборка.Следующий() Цикл 
		ОбластьСтрокаПеременная = ?(Выборка.ЭтоСайт, ОбластьСтрокаСайт, ОбластьСтрока);
		ОбластьСтрокаПеременная.Параметры.Заполнить(Выборка); 
		ОбластьСтрокаПеременная.Параметры.Номер = НомерСтроки;
		ОбластьСтрокаПеременная.Параметры.Процент = Формат(?(Итог = 0, 0, Выборка.Продажи/Итог), "ЧЦ=10; ЧДЦ=2");
		
		СтруктураДляОтчета = Новый Структура;
		СтруктураДляОтчета.Вставить("Филиал", Филиал);
		СтруктураДляОтчета.Вставить("Автор", Выборка.Сотрудник);
		
		ВыборкаСотрудник = Выборка.Выбрать();
		Счетчик = 0;
		
		Пока ВыборкаСотрудник.Следующий() Цикл
			СтруктураДанных = Новый Структура;
			СтруктураДанных.Вставить("ДатаПродажи",ВыборкаСотрудник.ДатаПродажи);
			СтруктураДанных.Вставить("ДокументПродажи",ВыборкаСотрудник.ДокументПродажи);
			СтруктураДанных.Вставить("ТоварПродажи",ВыборкаСотрудник.ТоварПродажи);
			СтруктураДанных.Вставить("Количество",ВыборкаСотрудник.Количество);
			СтруктураДанных.Вставить("Продажи",ВыборкаСотрудник.Продажи);
		СтруктураДляОтчета.Вставить("Данные" + Счетчик, СтруктураДанных);
		Счетчик = Счетчик + 1;
		КонецЦикла;
		ОбластьСтрокаПеременная.Параметры.Расшифровка = СтруктураДляОтчета;
		
		Результат.Вывести(ОбластьСтрокаПеременная);
		
		НомерСтроки = НомерСтроки + 1;
		
	КонецЦикла;
	КонецЕсли;	
	
	ОбластьИтог.Параметры.Продажи = Итог;
	
	
	Результат.Вывести(ОбластьИтог);
	Результат.Вывести(ОбластьПустая);
	Результат.Вывести(ОбластьПустая);
	Результат.Вывести(ОбластьШапкаОстатки);

	
	ВыборкаОстаткиПоДням = РезультатЗапроса[4].Выбрать();
	ВрмКоличество = 0;
	ВрмСумма = 0;
	
	Пока ВыборкаОстаткиПоДням.Следующий() Цикл
		ОбластьСтрокаОстатки.Параметры.Заполнить(ВыборкаОстаткиПоДням);
		Если ОбластьСтрокаОстатки.Параметры.КоличествоОстатков = Неопределено Тогда
			 ОбластьСтрокаОстатки.Параметры.КоличествоОстатков = ВрмКоличество;
	         ОбластьСтрокаОстатки.Параметры.СуммаОстатков = ВрмСумма;
		 Иначе
			ВрмКоличество = ВыборкаОстаткиПоДням.КоличествоОстатков;
			ВрмСумма = ВыборкаОстаткиПоДням.СуммаОстатков; 
		КонецЕсли;
		Результат.Вывести(ОбластьСтрокаОстатки);
	КонецЦикла; 
	
	 
		
	КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	СформироватьНаСервере();
КонецПроцедуры  

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	
	Если ТипЗнч(Расшифровка) = Тип("Структура") Тогда
		СтандартнаяОбработка = Ложь;
		ПарамтрыОткрытия = Новый Структура("СтруктураДляОтчета",Расшифровка);
		ОткрытьФорму("Отчет.ПродажиСотрудниковНаФилиале.Форма.ФормаРасшифровки", ПарамтрыОткрытия);
	КонецЕсли;

КонецПроцедуры

