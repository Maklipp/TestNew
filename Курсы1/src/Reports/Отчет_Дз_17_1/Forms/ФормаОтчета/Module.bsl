
&НаСервере
Процедура СформироватьНаСервере()
	
	Если Не ЗначениеЗаполнено(Период.ДатаНачала) или Не ЗначениеЗаполнено(Период.ДатаОкончания) ИЛИ Города.Количество() = 0 Тогда
		Сообщить("Не все параметры заполнены");
		Возврат
	КонецЕсли;
	
	ТабДок.Очистить();
	Начало =НачалоМесяца(Период.ДатаНачала);
	Конец = КонецМесяца(Период.ДатаОкончания);
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Филиалы.Ссылка КАК Ссылка,
	                      |	Филиалы.Город.Ссылка КАК ГородСсылка
	                      |ПОМЕСТИТЬ ВТ_Города
	                      |ИЗ
	                      |	Справочник.Филиалы КАК Филиалы
	                      |ГДЕ
	                      |	Филиалы.Город В(&СсылкаГород)
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ПродажаТовараОбороты.Номенклатура КАК Номенклатура,
	                      |	ПродажаТовараОбороты.Филиал КАК Филиал,
	                      |	СУММА(ПродажаТовараОбороты.СуммаПродажиОборот) - СУММА(ПродажаТовараОбороты.СебестоимостьОборот) КАК СуммаПродажиОборот
	                      |ПОМЕСТИТЬ ВТ_Валовая
	                      |ИЗ
	                      |	РегистрНакопления.ПродажаТовара.Обороты(&Дата1, &Дата2, Регистратор, ) КАК ПродажаТовараОбороты
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Города КАК ВТ_Города
	                      |		ПО ПродажаТовараОбороты.Филиал = ВТ_Города.Ссылка
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ПродажаТовараОбороты.Номенклатура,
	                      |	ПродажаТовараОбороты.Филиал
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ОстаткиТовараОстаткиИОбороты.Номенклатура.Ссылка КАК ГруппаТовара,
	                      |	ВТ_Города.Ссылка КАК Филиал,
	                      |	СУММА(ОстаткиТовараОстаткиИОбороты.КоличествоПриход) КАК НачальныйОстаток,
	                      |	СУММА(ВТ_Валовая.СуммаПродажиОборот) КАК ВаловаяПрибыль,
	                      |	СУММА(ОстаткиТовараОстаткиИОбороты.КоличествоОборот) КАК КонечныйОстаток
	                      |ИЗ
	                      |	ВТ_Города КАК ВТ_Города
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиТовара.ОстаткиИОбороты(&Дата1, &Дата2, Регистратор, , ) КАК ОстаткиТовараОстаткиИОбороты
	                      |		ПО ОстаткиТовараОстаткиИОбороты.Филиал = ВТ_Города.Ссылка
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Валовая КАК ВТ_Валовая
	                      |		ПО (ВТ_Валовая.Номенклатура = ОстаткиТовараОстаткиИОбороты.Номенклатура
	                      |				И ВТ_Валовая.Филиал = ОстаткиТовараОстаткиИОбороты.Филиал)
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВТ_Города.Ссылка,
	                      |	ОстаткиТовараОстаткиИОбороты.Номенклатура.Ссылка
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ГруппаТовара УБЫВ
	                      |ИТОГИ
	                      |	СУММА(НачальныйОстаток),
	                      |	СУММА(ВаловаяПрибыль),
	                      |	СУММА(КонечныйОстаток)
	                      |ПО
	                      |	ГруппаТовара ИЕРАРХИЯ
	                      |АВТОУПОРЯДОЧИВАНИЕ");
	
	Запрос.УстановитьПараметр("Дата1",Начало);
	Запрос.УстановитьПараметр("Дата2",Конец);
	Запрос.УстановитьПараметр("СсылкаГород",Города);
	
	ОбъектОтчет = РеквизитФормыВЗначение("Отчет");
	Макет = ОбъектОтчет.ПолучитьМакет("Макет");
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьГруппа = Макет.ПолучитьОбласть("Группа");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	
	ТабДок.Вывести(ОбластьШапка);
	
	ТабДок.НачатьАвтогруппировкуСтрок();
	ВывестиДанныеПоГруппе(Запрос.Выполнить(), ТабДок, ОбластьГруппа, ОбластьСтрока);
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
КонецПроцедуры  

&НаСервере
Процедура ВывестиДанныеПоГруппе(ВыборкаЗапрос, ТабличныйДокумент, ОбластьГруппа, ОбластьСтрока)
	
	ВыборкаДанные = ВыборкаЗапрос.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаДанные.Следующий() Цикл 
		ТекУровень = ВыборкаДанные.Уровень();
		Если (ВыборкаДанные.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоИерархии) Тогда
			 	
			ОбластьГруппа.Параметры.Заполнить(ВыборкаДанные);
			ТабличныйДокумент.Вывести(ОбластьГруппа, ВыборкаДанные.Уровень(),, Ложь);
			ВывестиДанныеПоГруппе(ВыборкаДанные, ТабличныйДокумент, ОбластьГруппа, ОбластьСтрока);
		Иначе
			ВыборкаСтроки = ВыборкаДанные.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,""); 
			ОбластьСтрока.Параметры.Заполнить(ВыборкаДанные);
		    ТабличныйДокумент.Вывести(ОбластьСтрока, ВыборкаДанные.Уровень(),, Ложь);
			Пока ВыборкаСтроки.Следующий() Цикл
				ОбластьСтрока.Параметры.Заполнить(ВыборкаСтроки);
				
				Расшифровка = Новый Структура("Товар, Филиал");
				Расшифровка.Товар = ВыборкаСтроки.ГруппаТовара;
				Расшифровка.Филиал = ВыборкаСтроки.Филиал;
				ОбластьСтрока.Параметры.РасшифровкаТовар = Расшифровка;
				
				
				ТабличныйДокумент.Вывести(ОбластьСтрока, ВыборкаСтроки.Уровень(),, Ложь);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	СформироватьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ТабДокОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	
	Если ТипЗнч(Расшифровка) = Тип("Структура") Тогда
		СтандартнаяОбработка = Ложь;
		Расшифровка.Вставить("ДатаС",Период.ДатаНачала);
		Расшифровка.Вставить("ДатаПо",Период.ДатаОкончания);
        ПарамтрыОткрытия = Новый Структура("СтруктураДляОтчета",Расшифровка);
		ОткрытьФорму("Отчет.Отчет_Дз_17_1.Форма.ФормаРасшифровки",ПарамтрыОткрытия);
	КонецЕсли;

	  
КонецПроцедуры
