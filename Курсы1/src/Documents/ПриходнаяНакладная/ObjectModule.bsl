
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивОшибок = Новый Массив;
	
	Если Не ЗначениеЗаполнено(Филиал) Тогда
		МассивОшибок.Добавить("Филиал не можен быть пустым");
	КонецЕсли;
	
	Если МассивОшибок.Количество() > 0 Тогда
		Отказ = Истина;
		Сообщить(СтрСоединить(МассивОшибок, Символы.ПС));
	КонецЕсли;
	
	ПроверяемыеРеквизиты.Добавить("Автор");
	ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Склад")); 
	
	Если ДокументОснование <> Документы.ЗаказПоставщику.ПустаяСсылка() Тогда
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	ЗаказанныеТоварыОстатки.Номенклатура КАК Номенклатура,
		|	ЗаказанныеТоварыОстатки.КоличествоОстаток КАК Количество
		|ПОМЕСТИТЬ ВТ_Данные
		|ИЗ
		|	РегистрНакопления.ЗаказанныеТовары.Остатки(, Заказ = &Заказ) КАК ЗаказанныеТоварыОстатки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаказанныеТоварыОбороты.Номенклатура,
		|	ЗаказанныеТоварыОбороты.КоличествоРасход
		|ИЗ
		|	РегистрНакопления.ЗаказанныеТовары.Обороты(, , Регистратор, Заказ = &Заказ) КАК ЗаказанныеТоварыОбороты
		|ГДЕ
		|	ЗаказанныеТоварыОбороты.Регистратор = &Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Данные.Номенклатура КАК Номенклатура,
		|	СУММА(ВТ_Данные.Количество) КАК Количество
		|ИЗ
		|	ВТ_Данные КАК ВТ_Данные
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Данные.Номенклатура");
		
		Запрос.УстановитьПараметр("Заказ", ДокументОснование);
		Запрос.УстановитьПараметр("Регистратор", ЭтотОбъект.Ссылка);
		ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();	
		
		Для Каждого Строка из Номенклатура Цикл
			Если ЗначениеЗаполнено(Строка.Номенклатура) Тогда
				
				НайденнаяСтрока = ТаблицаЗапроса.Найти(Строка.Номенклатура,"Номенклатура");
				
				Если НайденнаяСтрока = Неопределено Тогда
					Отказ = Истина;
					Сообщить("Товар " + Строка.Номенклатура + " не был в заказе, либо был снят с заказа"); 
				Иначе
					Если НайденнаяСтрока.Количество < Строка.Количество Тогда
						Отказ = Истина;
						Сообщить(СтрШаблон("Вы не можете принять товар %1, т.к.  не совпадает с количеством заказаного товара", Строка.Номенклатура));
					КонецЕсли;
					
					НайденнаяСтрока.Количество = НайденнаяСтрока.Количество - Строка.Количество;	
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ПровестиРаспровести()
	
	Если Не ПроверитьЗаполнение() ТОгда
		Возврат;
	КонецЕсли;
	ПровестираспровестинаСервере();
	
КонецПроцедуры


Процедура ОбработкаПроведения(Отказ, Режим)
	
	Если ДокументОснование <> Документы.ЗаказПоставщику.ПустаяСсылка() Тогда 
		Движения.ЗаказанныеТовары.Записывать = Истина;
	КонецЕсли; 
	
	Движения.ОстаткиТовара.Записывать = Истина;
	
	Для Каждого ТекСтрокаНоменклатура Из Номенклатура Цикл
		Если ЗначениеЗаполнено(ТекСтрокаНоменклатура.Номенклатура ) Тогда
			Движение = Движения.ЗаказанныеТовары.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Заказ = ДокументОснование;
			Движение.Филиал = Филиал;
			Движение.Номенклатура = ТекСтрокаНоменклатура.Номенклатура;
			Движение.Количество = ТекСтрокаНоменклатура.Количество;
			Движение.Сумма = ТекСтрокаНоменклатура.Сумма;
			
			Движение = Движения.ОстаткиТовара.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = Дата;
			Движение.Номенклатура = ТекСтрокаНоменклатура.Номенклатура;
			Движение.Филиал = Филиал;
			Движение.Количество = ТекСтрокаНоменклатура.Количество;
			Движение.Сумма = ТекСтрокаНоменклатура.Сумма;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры


Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		
		Автор = ДанныеЗаполнения.Автор;
		Контрагент = ДанныеЗаполнения.Контрагент;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		Филиал = ДанныеЗаполнения.ФилиалПоставки;
		
		ЗапросТовара = Новый Запрос("ВЫБРАТЬ
		                            |	ЗаказанныеТоварыОстаткиИОбороты.Номенклатура КАК Номенклатура,
		                            |	СУММА(ЗаказанныеТоварыОстаткиИОбороты.КоличествоКонечныйОстаток) КАК Количество,
		                            |	ЗаказанныеТоварыОстаткиИОбороты.СуммаПриход / ЗаказанныеТоварыОстаткиИОбороты.КоличествоПриход КАК Цена,
		                            |	СУММА(ЗаказанныеТоварыОстаткиИОбороты.СуммаПриход / ЗаказанныеТоварыОстаткиИОбороты.КоличествоПриход * ЗаказанныеТоварыОстаткиИОбороты.КоличествоКонечныйОстаток) КАК Сумма
		                            |ИЗ
		                            |	РегистрНакопления.ЗаказанныеТовары.ОстаткиИОбороты(, , , , Заказ = &Заказ) КАК ЗаказанныеТоварыОстаткиИОбороты
		                            |
		                            |СГРУППИРОВАТЬ ПО
		                            |	ЗаказанныеТоварыОстаткиИОбороты.Номенклатура,
		                            |	ЗаказанныеТоварыОстаткиИОбороты.СуммаПриход / ЗаказанныеТоварыОстаткиИОбороты.КоличествоПриход
		                            |
		                            |ИМЕЮЩИЕ
		                            |	СУММА(ЗаказанныеТоварыОстаткиИОбороты.КоличествоКонечныйОстаток) > 0");
		
		ЗапросТовара.УстановитьПараметр("Заказ", ДанныеЗаполнения.Ссылка);
		ТаблицаТовара = ЗапросТовара.Выполнить().Выгрузить();
		
		Номенклатура.Загрузить(ТаблицаТовара);
		СуммаДокумента = Номенклатура.Итог("Сумма");
		
	КонецЕсли; 
	
КонецПроцедуры

