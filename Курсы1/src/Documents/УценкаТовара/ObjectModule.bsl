
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Для Каждого ТекСтрокаСостав Из Состав Цикл
	 ЗапросПроверкаНаДатуЗаведения = Новый Запрос("ВЫБРАТЬ
	                                              |	СведенияОбУцененномТовареСрезПервых.Товар.Наименование КАК ТоварНаименование
	                                              |ИЗ
	                                              |	РегистрСведений.СведенияОбУцененномТоваре.СрезПервых(
	                                              |			&Дата,
	                                              |			Товар = &Товар
	                                              |				И SN = &SN) КАК СведенияОбУцененномТовареСрезПервых");
	 ЗапросПроверкаНаДатуЗаведения.УстановитьПараметр("Дата",Дата);
	ЗапросПроверкаНаДатуЗаведения.УстановитьПараметр("Товар",ТекСтрокаСостав.Номенклатура);
	 ЗапросПроверкаНаДатуЗаведения.УстановитьПараметр("SN",ТекСтрокаСостав.SN);
	 Выборка = ЗапросПроверкаНаДатуЗаведения.Выполнить().Выбрать();
	 Если Выборка.Следующий() Тогда
		 Сообщить("Вы не можете уценить товар " + Выборка.ТоварНаименование + " этой датой, т.к. товар был уценен более поздним числом");
		 Отказ = Истина;
	 КонецЕсли;
	 КонецЦикла;
	 
	 // регистр ЦеныНаУцененныйТовар
	 Движения.ЦеныНаУцененныйТовар.Записывать = Истина;
	Для Каждого ТекСтрокаСостав Из Состав Цикл
		Движение = Движения.ЦеныНаУцененныйТовар.Добавить();
		Движение.Период = Дата;
		Движение.SN = ТекСтрокаСостав.SN;
		Движение.Товар = ТекСтрокаСостав.Номенклатура;
		Движение.Цена = ТекСтрокаСостав.НоваяЦена;
	КонецЦикла;
	
	// регистр СведенияОбУцененномТоваре
	Движения.СведенияОбУцененномТоваре.Записывать = Истина;
	Для Каждого ТекСтрокаСостав Из Состав Цикл
		Движение = Движения.СведенияОбУцененномТоваре.Добавить();
		Движение.Период = Дата;
		Движение.Товар = ТекСтрокаСостав.Номенклатура;
		Движение.SN = ТекСтрокаСостав.SN;
		Движение.ФилиалВозникновенияУценки = Филиал;
		Себестоимость = ПроверкаУценки(ТекСтрокаСостав.Номенклатура,ТекСтрокаСостав.SN,Дата);
		Движение.Себестоимость = Себестоимость;
	КонецЦикла;
	
	// регистр УценкаТовара Приход
	Движения.УценкаТовара.Записывать = Истина;
	Для Каждого ТекСтрокаСостав Из Состав Цикл
		Движение = Движения.УценкаТовара.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Товар = ТекСтрокаСостав.Номенклатура;
		Движение.SN = ТекСтрокаСостав.SN;
		Движение.Филиал = Филиал;
		Движение.Склад = Склад;
		
		ЗапросСуммаУценок = Новый Запрос("ВЫБРАТЬ
		|	ЕстьNULL(СУММА(УценкаТовараОбороты.СуммаУценкиОборот),0) КАК СуммаУценкиОборот
		|ИЗ
		|	РегистрНакопления.УценкаТовара.Обороты(
		|			,
		|			&Дата,
		|			Регистратор,
		|			SN = &SN
		|				И Товар = &Товар) КАК УценкаТовараОбороты");
		
		ЗапросСуммаУценок.УстановитьПараметр("Дата",Дата);
		ЗапросСуммаУценок.УстановитьПараметр("Товар",ТекСтрокаСостав.Номенклатура);
		ЗапросСуммаУценок.УстановитьПараметр("SN",ТекСтрокаСостав.SN);
		ТаблицаЗапроса = ЗапросСуммаУценок.Выполнить().Выгрузить();
		Если ТаблицаЗапроса.Количество() > 0 Тогда
			СтрокаТаблицы = ТаблицаЗапроса[0];		
			СуммаУценок = СтрокаТаблицы.СуммаУценкиОборот;
		Иначе
			СуммаУценок = 0;
		КонецЕсли;
		
		Движение.СуммаУценки = Себестоимость - ТекСтрокаСостав.НоваяЦена - СуммаУценок;
	КонецЦикла;
	
КонецПроцедуры

&наСервере
Функция ПроверкаУценки(Номенклатура,SN,Дата)
	
	
	ПроверочныйЗапрос = Новый Запрос;
	ПроверочныйЗапрос.Текст = 
	"ВЫБРАТЬ
	|	СведенияОбУцененномТовареСрезПоследних.Себестоимость КАК Себестоимость
	|ИЗ
	|	РегистрСведений.СведенияОбУцененномТоваре.СрезПоследних КАК СведенияОбУцененномТовареСрезПоследних
	|ГДЕ
	|	СведенияОбУцененномТовареСрезПоследних.Товар = &Товар
	|	И СведенияОбУцененномТовареСрезПоследних.SN = &SN";
	
	ПроверочныйЗапрос.УстановитьПараметр("SN", SN);
	ПроверочныйЗапрос.УстановитьПараметр("Товар", Номенклатура);
	
	РезультатЗапроса = ПроверочныйЗапрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Себестоимость = ВыборкаДетальныеЗаписи.Себестоимость;
		Возврат Себестоимость
	Иначе
		ЗапросСебестоимости = Новый Запрос("ВЫБРАТЬ
		|	ОстаткиТовараОстатки.СуммаОстаток / ОстаткиТовараОстатки.КоличествоОстаток КАК Себестоимость
		|ИЗ
		|	РегистрНакопления.ОстаткиТовара.Остатки(&Дата, ) КАК ОстаткиТовараОстатки
		|ГДЕ
		|	ОстаткиТовараОстатки.Номенклатура = &Номенклатура");
		
		ЗапросСебестоимости.УстановитьПараметр("Номенклатура", Номенклатура);
		ЗапросСебестоимости.УстановитьПараметр("Дата", Дата);
		
		ТаблицаЗапроса = ЗапросСебестоимости.Выполнить().Выгрузить();
		
		Если ТаблицаЗапроса.Количество() > 0 Тогда
			СтрокаТаблицы = ТаблицаЗапроса[0];		
			Себестоимость = СтрокаТаблицы.Себестоимость;
		Иначе
			Себестоимость = 0;
		КонецЕсли;
		Возврат Себестоимость
	КонецЕсли;
	
КонецФункции 








